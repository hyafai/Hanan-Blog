[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Tips Sheet",
    "section": "",
    "text": "how to commit and push changes to git hub\n\ncommit\n\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/my new posts /index.html",
    "href": "posts/my new posts /index.html",
    "title": "My Journey with R",
    "section": "",
    "text": "This section of my blog will be dedicated to sharing my progress in R, some thoughts of the journey including the ups and downs."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hanan-blog",
    "section": "",
    "text": "Week4_Data Visualization\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2023\n\n\nHanan Yafai\n\n\n\n\n\n\n  \n\n\n\n\nWeek3_qmd\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nFeb 15, 2023\n\n\nHanan Yafai\n\n\n\n\n\n\n  \n\n\n\n\nTips Sheet\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nFeb 6, 2023\n\n\nHanan Yafai\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 27, 2023\n\n\nHanan Yafai\n\n\n\n\n\n\n  \n\n\n\n\nMy Journey with R\n\n\n\n\n\n\n\nThoughts\n\n\n\n\n\n\n\n\n\n\n\nJan 27, 2023\n\n\nHanan Yafai\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/tips sheet /index.html",
    "href": "posts/tips sheet /index.html",
    "title": "Tips Sheet",
    "section": "",
    "text": "To customize how R Studio looks in a way that works for you Click:\n\nTools > Global Options > Appearance\n\nTo install packages this is done using install.packages()\n\nImportant : Never install a package from inside a script. Only do this from the console pane or the packages tab of the lower right pane.\nto load a package this is done using the library() function\n\nYou can type ?function_name in the console to access the help file.\nTab auto-complete\nIf you write the name of the function and then press the tab key, R Studio will show you the arguments that function takes along with a brief description\nArguments : sample(x, size, replace = FALSE, prob = NULL)\n\n x is the list of items we want to choose from, size is the number of items we want to choose, replace is whether or not each item may be selected more than once, and prob gives the probability that each item is chosen. it will use defaults of FALSE (each item can only be chosen once) and NULL (all items will have equal probability of being chosen).\nExample:\n\nsample(size = 5, replace = TRUE, x = letters)\n\n[1] \"c\" \"t\" \"o\" \"u\" \"p\"\n\n\n\nObjects can contain numbers, words, or the result of operations and analyses.\n\nYou assign content to an object using <-\n\n\n\nFor (text) data In order for R to recognize it as text, it must be enclosed in double quotation marks \" \" You cant do this for numeric data.\nTo print the contents of an object, type the object’s name in the console and press enter.\n\nHow to commit and push changes to github:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website.\n\n\nAlways add line between your commands\n\nTo quickly make the r code block click at the same time:\n(options+ command + I).\n$ sign give you a list of things inside your table"
  },
  {
    "objectID": "posts/week3_qmd /week3 .html",
    "href": "posts/week3_qmd /week3 .html",
    "title": "Week3_qmd",
    "section": "",
    "text": "Assignment check list:\n\nBe able to make a new .qmd document -\n\nYes\n\nBe able to render a .qmd document\n\nyes\n\nExplain the difference between the source editor view and visual editor view in Rstudio. plain text all characters will be displayed exactly visual will render any text as rmarkdown text (will directly show the formatted texts ex: bold vs bold )\nBe able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\ndone\n\nBe aware of resources to help you learn more about markdown options.\n\ndone\n\nBe able to insert an R code chunk, and show the output in the rendered document.\n\nmacro for quick insert\n\n\n\n1+1\n\n[1] 2\n\n1:12\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12\n\n1:4\n\n[1] 1 2 3 4\n\n\n\nRunning R code chunks in a qmd\n\npressing play\ncopy/paste into console\nhighlight then command-enter (mac)\nprecedence issues (first to last)\n( done)\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n(done)\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\nWrite inline r code.\n\n\nname <- \"hanan\"\nage <- 21\ntoday <- Sys.Date()\nRamadan <- as.Date(\"2023-03-21\")\n\nMy name is hanan and I am 21 years old. It is 27 days until Ramadan, which is my favorite religious month & holiday.\n\nExplain how the rendering environment is different from the Rstudio environment.\nBe aware of more advanced quarto options for html documents, and try some of the options.\n\nYes! Use execute in top-level yml, chunk options have precedence over global options."
  },
  {
    "objectID": "posts/Week 4_Data vis/data vis.html",
    "href": "posts/Week 4_Data vis/data vis.html",
    "title": "Week4_Data Visualization",
    "section": "",
    "text": "#|message: False\n\n#load ggplot2 and other example data set \nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n# load the data \nstarwars_copy<- starwars\n#some of the data type we can see\nhead(starwars_copy)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 <NA>    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nclass(starwars_copy$name)\n\n[1] \"character\"\n\nclass(starwars_copy$height)\n\n[1] \"integer\"\n\nggplot(data=starwars_copy, mapping = aes(x=height,y=mass) )+\n geom_point()\n\nWarning: Removed 28 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n# r will assume that all numbers are double unless you add L to get rid of the dismal eg. (age)\ntypeof(10L)\n\n[1] \"integer\"\n\ntypeof(10.99877634567)\n\n[1] \"double\"\n\n\n\nData types: Show that you understand what is available to you in R. Note also, this goal overlaps with part of the midterm project. See the appendix on Data Types in the textbook for help. Write notes and R code chunks to demonstrate your knowledge\nTidy Data: Show that you understand what this means. Give an example of data this is in tidy format, and data that is not.\nggplot2: We will continue learning about this across the semester. Show at a minimum that you can make a graph and add it to your blog. Try examples from the textbook. Show that you understand the layer concept. Identify aspects that are confusing to you so we can discuss them in class.\n\n\nmy_df<- data.frame(a=1:5,\n                  b=c(\"one\",\"two\",\"three\",\"four\",\"five\")    )"
  }
]